	MODULE	ESINCOS

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

 IF (BIF)

EBAMS	DATAE	683565275.5

 ELSE

PI2	DATAE	1.570796326794		;PI/2
IPI	DATAE	0.318309886184		;1/PI
MAX	DATAE	131072.0		;MAX VALUE OF ARGUMENT
ONE	DATAE	1.0
HALF	DATAE	0.5
MONE	DATAE	-1.0
EPS	DATAE	1.90734863E-6
C1	DATA	16#06488#,2,0		;EXACTLY 3.1416015625
C2	DATAE	-8.90891020676E-6
POLY	EQU	*			;SINE CURVE POLYNOMIAL COEFFICIENTS
	DATAE	-0.737066277507E-12
	DATAE	 0.160478446324E-9
	DATAE	-0.250518708835E-7
	DATAE	 0.275573164213E-5
	DATAE	-0.198412698232E-3
	DATAE	 0.833333333328E-2
	DATAE	-0.166666666667
 ENDIF

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

;	COMPUTE THE SINE OR COSINE 
;
;	FUNCTION A_COS(X:FLOAT) RETURN FLOAT ;

 IF (BIF)

	EXPORT	A_ECOS
A_ECOS	ENTER   []			;COMPUTE COSINE USING EXTENDED FLOAT
	DLR	R0,R3
	LR	R2,R5
	EFM	R0,EBAMS		; Convert to BAMS
	EFIX	R0,R0			; R0 = BAMS
	IDATA	16#4F30#		; ECOS R0 BIF
	RETURN  A_ECOS

	EXPORT	A_ESIN
A_ESIN	ENTER   []
	DLR	R0,R3
	LR	R2,R5
	EFM	R0,EBAMS		; Convert to BAMS
	EFIX	R0,R0			; R0 = BAMS
	IDATA	16#4F10#		; ESIN R0 BIF
	RETURN  A_ESIN

 ELSE

	EXPORT	A_ECOS
A_ECOS	ENTER   []
	SBR	15,R14			;COSINE FLAG
	SBR	14,R14			;SIGN FLAG
	LR	R8,R5
	DLR	R6,R3			;NEGATIVE?
	BGE	COS1			;NO
	PSHM	R6,R8			;MAKE POSITIVE
	DSR	R6,R6
	SR	R8,R8
	EFS	R6,0,R15
	LIM	R15,3,R15
COS1	EFC	R6,MAX			;ARGUMENT TOO LARGE
	BLE	ARGOK
        bpt		            ;CONSTRAINT ERROR - DOES NOT RETURN
ARGOK	EFA	R6,PI2
        BR      A_ESINECOS
        RETURN  A_ECOS



        EXPORT  A_ESIN
A_ESIN	ENTER   []
	RBR	15,R14			;SINE FLAG
	LR	R8,R5
	DLR	R6,R3			;NEGATIVE?
	BGE	SIN1
	RBR	14,R14			;SIGN FLAG
	PSHM	R6,R8			;MAKE POSITIVE
	DSR	R6,R6
	SR	R8,R8
	EFS	R6,0,R15
	LIM	R15,3,R15
	BR	SINX
SIN1	SBR	14,R14			;SIGN FLAG
SINX	EFC	R6,MAX
	BLE	A_ESINECOS
SIN2	bpt				;CONSTRAINT ERROR - DOES NOT RETURN
        RETURN  A_ESIN

; NOTE: This entry point must match A_ESIN and A_ECOS

A_ESINECOS ENTER []
	EFM	R6,IPI			;Y*1/PI
	EFA	R6,HALF
	EFIX	R0,R6
	EFLT	R9,R0
	TBR	15,R1			;EVEN?
	BEZ	SIN4
	XORM	R14,16#0002#		;INVERT SIGN FLAG
SIN4	TBR	15,R14
	BEZ	SIN5
	EFS	R9,HALF
SIN5	EQU	*			;REDUCE ARGUMENT
	LR	R3,R3
	BGE	SIN6
	PSHM	R3,R5
	DSR	R3,R3
	SR	R5,R5
	EFS	R3,0,R15
	LIM	R15,3,R15
SIN6	EQU	*			;ABS(X)
	EFIX	R0,R3
	EFLT	R0,R0			;X1
	EFSR	R3,R0			;X2
	DLR	R6,R9
	LR	R8,R11			;COPY XN
	EFM	R6,C1			;XN*C1
	EFSR	R0,R6
	EFAR	R0,R3
	EFM	R9,C2			;XN*C2
	EFSR	R0,R9			;f
	LR	R5,R2
	DLR	R3,R0			;ABS f
	BGE	SIN7
	PSHM	R3,R5
	DSR	R3,R3
	SR	R5,R5
	EFS	R3,0,R15
	LIM	R15,3,R15
SIN7	EQU	*
	EFC	R3,EPS			;STEP 11
	BLE	SINEX			;ALMOST DONE SIN(X) = X 
	EFMR	R3,R3			;g=f * f
	DSR	R6,R6
	SR	R8,R8
	LIM	R12,POLY
	LISP	R11,7
SINPL	EFA	R6,0,R12		;COMPUTE SINE FROM POLYNOMIAL APPROX
	EFMR	R6,R3			;*g
	LIM	R12,3,R12
	SISP	R11,1
	BGT	SINPL
	EFMR	R6,R0			;STEP 14
	EFAR	R0,R6
SINEX	EQU	*
	TBR	14,R14			;TEST SIGN
	BNZ	SINEX1
	EFM	R0,MONE
SINEX1	RETURN  A_ESINECOS

 ENDIF

	END

	MODULE	SINCOS
	IMPORT	A_CONERR

FALSE EQU  0
TRUE  EQU  1
BIF   EQU  FALSE

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

 IF (BIF)

BAMS	DATAF	10430.37835

 ELSE

PI2	DATAF	1.570796326794		;PI/2
IPI	DATAF	0.318309886184		;1/PI
MAX	DATAF	9099.0			;MAX VALUE OF ARGUMENT
PII	DATAE	3.14159265359		;PI OR CLOSE TO IT
HALF	DATAE	0.5
MONE	DATAF	-1.0
EPS	DATAF	1.90734863E-6
POLY	EQU	*			;SINE CURVE POLYNOMIAL COEFFICIENTS
	DATAF	-0.1666665668E00
	DATAF	 0.8333025139E-2
	DATAF	-0.1980741872E-3
	DATAF	 0.2601903036E-5

 ENDIF

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

;	COMPUTE THE SINE OR COSINE 
;
;	FUNCTION A_COS(X:FLOAT) RETURN FLOAT ;

 IF (BIF)

	EXPORT	A_COS
A_COS	ENTER   []		;COMPUTE COSINE USING EXTENDED FLOAT
	DLR	R0,R3
	FM	R0,BAMS		; Convert to BAMS
	FIX	R0,R0		; R0 = BAMS
	IDATA	16#4F20#	; COS R0 BIF
	RETURN  A_COS

	EXPORT	A_SIN
A_SIN	ENTER   []
	DLR	R0,R3
	FM	R0,BAMS		; Convert to BAMS
	FIX	R0,R0		; R0 = BAMS
	IDATA	16#4F00#	; SIN R0 BIF
	RETURN  A_SIN

 ELSE

	EXPORT	A_COS
A_COS	ENTER   []			;COMPUTE COSINE USING EXTENDED FLOAT
	SBR	15,R10			;COSINE FLAG
	SBR	14,R10			;SIGN FLAG
	FABS	R5,R3
COS1	FC	R5,MAX			;ARGUMENT TOO LARGE
	BLE	ARGOK
	bpt		ONSTRAINT ERROR - DOES NOT RETURN
ARGOK	FA	R5,PI2
	BR	A_SINCOS
        RETURN  A_COS

        EXPORT  A_SIN
A_SIN	ENTER   []
	RBR	15,R10			;SINE FLAG
	DLR	R5,R3			;NEGATIVE?
	BGE	SIN1
	FABS	R5,R3			;MAKE POSITIVE
	RBR	14,R10			;SIGN FLAG
	BR	SINX
SIN1	SBR	14,R10			;SIGN FLAG
SINX	FC	R5,MAX
	BLE	A_SINCOS
SIN2	SJS	R15,A_CONERR		;CONSTRAINT ERROR - DOES NOT RETURN
        RETURN  A_SIN

;NOTE: This entry point must match A_SIN and A_COS.

A_SINCOS ENTER  []
	FM	R5,IPI			;Y*1/PI
	FA	R5,HALF
	FIX	R0,R5
	DSRA	R0,16			;MAKE DOUBLE
	EFLT	R7,R0			;XN
	TBR	15,R1			;EVEN?
	BEZ	SIN4
	XORM	R10,16#0002#		;INVERT SIGN FLAG
SIN4	TBR	15,R10
	BEZ	SIN5
	EFS	R7,HALF
SIN5	EQU	*			;REDUCE ARGUMENT
	FABS	R0,R3			;ABS(X)
	SR     	R2,R2			;MAKE EXTENDED FLOAT
	EFM	R7,PII			;XN*PI
	EFSR	R0,R7			;f
	FABS	R3,R0
SIN7	EQU	*
	FC	R3,EPS			;STEP 11
	BLE	SINEX			;ALMOST DONE SIN(X) = X 
	FMR	R3,R3			;g=f * f
	DSR	R6,R6
	LISP	R8,6
SINPL	FA	R6,POLY,R8		;COMPUTE SINE FROM POLYNOMIAL APPROX
	FMR	R6,R3			;*g
	SISP	R8,2
	BGE	SINPL
	FMR	R6,R0			;STEP 14
	FAR	R0,R6
SINEX	EQU	*
	TBR	14,R10			;TEST SIGN
	BNZ	SINEX1
	FM	R0,MONE
SINEX1	RETURN  A_SINCOS

 ENDIF

	END

	MODULE	ELOG
	IMPORT	A_CONERR

;	FUNCTION LN(X:FLOAT) RETURN FLOAT ;
;
;	COMPUTE THE NATURAL LOG OR THE COMMON LOG OF A NUMBER

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

MAXFLT	DATA	16#07FFF#,16#0FF7F#,16#0FFFF#
RTHALF	DATAE	0.707106781187
HALF	DATAE	0.5
A0	DATAE	 0.373391689632E1
A1	DATAE	-0.632608662339E0
A2	DATAE	 0.444455151098E-2
B0	DATAE	 0.448070027557E2
B1	DATAE	-0.143123543559E2
B2	DATAE	 0.100E1
C1	DATA	16#058C0#,0,0
C2	DATAE	-2.121944000547E-4
C3	DATAE	0.434294481903251

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

	EXPORT	A_ELOG
A_ELOG	ENTER   []			;COMPUTE COMMON LOG EXTENDED FLOAT
	SBR	15,R14			;FLAG FOR COMMON LOG
	BR	ELN
        RETURN  A_ELOG

;NOTE: This entry point must match A_ELOG

	EXPORT	A_ELN
A_ELN	ENTER   []			;COMPUTE NATURAL LOG EXTENDED FLOAT
	RBR	15,R14			;FLAG FOR NATURAL LOG
ELN	EQU	*
	LR	R3,R3			;CHECK RANGE OF INPUT
	BGT	LN1
	BEZ	LN2
	SJS	R15,A_CONERR		;CONSTRAINT ERROR, # NEGATIVE
LN2	EFL	R0,MAXFLT
	BR	LNX			;RETURN MAX
LN1	EQU	*  
	LR	R12,R4
	XBR	R12			;EXTRACT N
	SRA	R12,8
	ANDM	R4,16#0FF00#		;EXP = 0
	DLR	R6,R3			;COPY F TO COMPUTE Z
	LR	R8,R5
	EFL	R9,HALF
	EFC	R3,RTHALF		;STEP 8
	BGT	LN3
	SISP	R12,1			;STEP 9
	EFSR	R6,R9
	EFMR	R9,R6
	EFA	R9,HALF
	BR	LN4
LN3	EQU	*			;STEP 10
	EFSR	R6,R9
	EFSR	R6,R9
	EFMR	R9,R3
	EFA	R9,HALF
LN4	EQU	*			;STEP 11
	EFDR	R6,R9			;R6=Z
	DLR	R9,R6
	LR	R11,R8
	EFMR 	R9,R9			;R9=W
	EFL	R0,B2
	EFAR	R0,R9			;B(W)
	EFMR	R0,R9
	EFA	R0,B1
	EFMR	R0,R9
	EFA	R0,B0
	EFL	R3,A2			;A(W)
	EFAR	R3,R9
	EFMR	R3,R9
	EFA	R3,A1
	EFMR	R3,R9
	EFA	R3,A0
	EFDR	R3,R0
	EFMR	R3,R9			;R(Z2)
	EFMR	R3,R6
	EFAR	R3,R6			;R(Z)
	DSRA	R12,16
	EFLT	R9,R12			;XN
	EFL	R0,C2
	EFMR	R0,R9
	EFAR	R0,R3
	EFM	R9,C1
	EFAR	R0,R9
	TBR	15,R14
	BEZ	LNX
	EFM	R0,C3
LNX	RETURN  A_ELN
	END

	MODULE	LOG
	IMPORT	A_CONERR

;	FUNCTION LN(X:FLOAT) RETURN FLOAT ;
;
;	COMPUTE THE NATURAL LOG OR THE COMMON LOG OF A NUMBER

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

MAXFLT	DATA	16#07FFF#,16#0FF7F#
RTHALF	DATAE	0.707106781187
HALF	DATAE	0.5
A0	DATAF	-0.5527074855E0
B0	DATAF	-0.6632718214E1
B1	DATAF	 0.100E1
C1	DATA	16#058C0#,0
C2	DATAF	-2.121944000547E-4
C3	DATAF	0.43429448

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

	EXPORT	A_LOG
A_LOG	ENTER   []			;COMPUTE COMMON LOG
	SBR	15,R14			;FLAG FOR COMMON LOG
	BR	ELN
        RETURN  A_LOG

;NOTE: This entery point must match A_LOG

	EXPORT	A_LN
A_LN	ENTER   []			;COMPUTE NATURAL LOG
	RBR	15,R14			;FLAG FOR NATURAL LOG
ELN	EQU	*
	LR	R3,R3			;CHECK RANGE OF INPUT
	BGT	LN1
	BEZ	LN2
	SJS	R15,A_CONERR		;CONSTRAINT ERROR, # NEGATIVE - NO RET
LN2	DL	R0,MAXFLT
	BR	LNX			;RETURN MAX
LN1	EQU	*  
	LR	R12,R4
	XBR	R12			;EXTRACT N
	SRA	R12,8
	ANDM	R4,16#0FF00#		;EXP = 0
	DLR	R6,R3			;COPY F TO COMPUTE Z
	SR	R5,R5
	SR	R8,R8
	EFL	R9,HALF
	EFC	R3,RTHALF		;STEP 8
	BGT	LN3
	SISP	R12,1			;STEP 9
	EFSR	R6,R9
	EFMR	R9,R6
	EFA	R9,HALF
	BR	LN4
LN3	EQU	*			;STEP 10
	EFSR	R6,R9
	EFSR	R6,R9
	EFMR	R9,R3
	EFA	R9,HALF
LN4	EQU	*			;STEP 11
	EFDR	R6,R9			;R6=Z
	DLR	R9,R6
	FMR 	R9,R9			;R9=W
	DL	R0,B1
	FAR	R0,R9			;B(W)
	FMR	R0,R9
	FA	R0,B0
	DL	R3,A0			;A(W)
	FAR	R3,R9
	FDR	R3,R0			;A(W)/B(W)
	FMR	R3,R9			;R(Z2)
	FMR	R3,R6
	FAR	R3,R6			;R(Z)
	FLT	R9,R12			;XN
	DL	R0,C2
	FMR	R0,R9
	FAR	R0,R3
	FM	R9,C1
	FAR	R0,R9
	TBR	15,R14
	BEZ	LNX
	FM	R0,C3
LNX	RETURN  A_LN
	END

	MODULE	EEXP
	IMPORT	A_CONERR
	IMPORT	A_EABS
	IMPORT	A_INTRND

;	FUNCTION EXP(X:LONG_SAFE_EXP) RETURN LONG_FLOAT ;

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

ONE	DATAE	1.0
HALF	DATAE	0.5
BIGX	DATAE	88.0			;LIMITS OF X
EPS	DATAE	9.09494702E-13		;E**X = 1
XL2	DATAE	1.4426950409		;1/LN(2)
C1	DATAE	0.693359375		;SCALING COEFFICIENTS
C2	DATAE	-2.1219444005E-4
P0	DATAE	0.24999999999		;POLYNOMIAL COEFFICIENTS
P1	DATAE	0.59504254978E-2
Q0	DATAE	0.5
Q1	DATAE	0.53567517645E-1
Q2	DATAE	0.29729363682E-3

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

	EXPORT	A_EEXP
A_EEXP	ENTER   []                      ;COMPUTE E**X
	SJS	R15,A_EABS		;COMPUTE ABSOLUTE VALUE OF INPUT
	EFC	R0,BIGX			;DO RANGE CHECK
        BLE     NOERR
	SJS	R15,A_CONERR            ; DOES NOT RETURN
NOERR	EFC	R0,EPS
	BGT	EXP1
	EFL	R0,ONE
	BR	EXPX
EXP1	EQU	*
	DLR	R6,R3			;R6=X
	LR	R8,R5
	EFM	R3,XL2
	SJS	R15,A_INTRND		;R0=N
	EFLT	R3,R0			;R3=XN
	EFIX	R9,R6
	EFLT	R9,R9			;X1
	EFSR	R6,R9			;X2
	DLR	R12,R3
	LR	R14,R5
	EFM	R12,C1			;XN*C1
	EFSR	R9,R12			;X1-XN*C1
	EFAR	R9,R6			;(X1-XN*C1)+X2
	EFM	R3,C2			;XN*C2
	EFSR	R9,R3			;R9=G
	DLR	R3,R9
	LR	R5,11
	EFMR	R3,R3			;Z=G**2
	DLR	R12,R3
	LR	R14,R5			;R12=Z
	EFM	R3,P1
	EFA	R3,P0			;P(Z)
	EFMR	R3,R9			;G*P(Z)
	EFL	R9,Q2
	EFMR	R9,R12			;FORM Q(Z)
	EFA	R9,Q1
	EFMR	R9,R12
	EFA	R9,Q0			;R9=Q(Z)
	EFSR	R9,R3
	EFDR	R3,R9
	EFA	R3,HALF
	AISP	R1,1			;N=N+1
	LIM	R2,16#0FF#
	ANDR	R1,R2
	LR	R0,R4
	ANDR	R0,R2
	AR	R1,R0
	ANDR	R1,R2
	ANDM	R4,16#0FF00#
	ORR	R4,R1			;R3=RESULT
	DLR	R0,R3
	LR	R2,R5
EXPX	RETURN  A_EEXP
	END

	MODULE	EXP
	IMPORT	A_CONERR
	IMPORT	A_EABS
	IMPORT	A_INTRND

;	FUNCTION EXP(X:SAFE_EXP) RETURN FLOAT ;

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

ONE	DATAF	1.0
HALF	DATAF	0.5
BIGX	DATAF	88.0			;LIMITS OF X
EPS	DATAF	5.96046E-8			;E**X = 1
XL2	DATAF	1.4426950409		;1/LN(2)
LN2	DATAE	0.6931471805599		;LN(2)
P0	DATAF	0.2499999995		;POLYNOMIAL COEFFICIENTS
P1	DATAF	0.4160288626E-2
Q0	DATAF	0.5
Q1	DATAF	0.4998717877E-1

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

	EXPORT	A_EXP
A_EXP	ENTER   []	;COMPUTE E**X
	FABS	R0,R3			;ABSOLUTE VALUE OF INPUT
	FC	R0,BIGX			;DO RANGE CHECK
        BLE     NOERR
	SJS     R15,A_CONERR            ;DOES NOT RETURN
NOERR	FC	R0,EPS
	BGT	EXP1
	DL	R0,ONE
	BR	EXPX
EXP1	EQU	*
	DLR	R6,R3			;R6=X
	SR	R8,R8			;EXTEND
	FM	R3,XL2
	BLT	EXP11
	FA	R3,HALF
	BR	EXP12
EXP11	FS	R3,HALF
EXP12	FIX	R0,R3			;R0=N
	DSRA	R0,16			;CONVERT TO DOUBLE INT
	EFLT	R3,R0			;R3=XN
	EFM	R3,LN2
	EFSR   	R6,R3			;R6=G
	DLR	R3,R6
	DLR	R5,R3			;R5=G
	FMR	R3,R3			;Z=G**2
	DLR	R7,R3			;R7=Z
	FM	R3,P1
	FA	R3,P0			;P(Z)
	FMR	R3,R5			;G*P(Z)
	FM	R7,Q1
	FA	R7,Q0			;Q(Z)
	FSR	R7,R3			;Q(Z)-G*P(Z)
	FDR	R3,R7
	FA	R3,HALF			;R(G)
	AISP	R1,1			;N=N+1
	LIM	R2,16#0FF#
	ANDR	R1,R2
	LR	R0,R4
	ANDR	R0,R2
	AR	R1,R0
	ANDR	R1,R2
	ANDM	R4,16#0FF00#
	ORR	R4,R1			;R3=RESULT
	DLR	R0,R3
EXPX	RETURN  A_EXP
	END

	MODULE	TAN
	IMPORT	A_EABS
	IMPORT	A_INTRND

FALSE EQU  0
TRUE  EQU  1
BIF   EQU  FALSE

;	FUNCTION TAN(X:LONG_FLOAT) RETURN LONG_FLOAT ;
;

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

 IF (BIF)

EBAMS	DATAE	683565275.5
BAMS	DATAF	10430.37835

 ELSE

P1	DATAE	-0.12828347041
P2	DATAE	0.28059182412E-2
P3	DATAE	-0.74836349666E-5
Q1	DATAE	-0.46161680374
Q2	DATAE	0.23344852822E-1
Q3	DATAE	-0.20844804422E-3
YMAX	DATAE	1.31072E5
TOPI	DATAE	0.6366197723676
PIOT	DATAE	1.570796326795
C1	DATAE	1.57080078125
C2	DATAE	-4.45445510338E-6
EPS	DATAE	3.81469727E-6
ONE	DATAE	1.0
HALF	DATAE	0.5

 ENDIF

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

 IF (BIF)

	EXPORT	A_TAN
A_TAN	ENTER   []
	DLR	R0,R3
	FM	R0,BAMS		; Convert to BAMS
	FIX	R0,R0		; R0 = BAMS
	LR	R3,R0		; Save BAMS
	IDATA	16#4F00#	; SIN R0 BIF
	IDATA	16#4F23#	; COS R3 BIF
	FDR	R0,R3		; SIN / COS
	RETURN  A_TAN

 ELSE

	EXPORT	A_TAN
A_TAN	ENTER   []
	SR	R5,R5
        LR      R3,R3
        BGE     CETAN
        LISN    R5,1
CETAN	SJS	R15,A_ETAN
	RETURN  A_TAN

 ENDIF

 IF (BIF)

	EXPORT	A_ETAN
A_ETAN	ENTER   []
	DLR	R0,R3
	LR	R2,R5
	EFM	R0,EBAMS	; Convert to BAMS
	EFIX	R0,R0		; R0 = BAMS
	DLR	R3,R0
	IDATA	16#4F10#	; ESIN R0 BIF
	IDATA	16#4F33#	; ECOS R3 BIF
	EFDR	R0,R3		; SIN / COS
	RETURN  A_ETAN

 ELSE

	EXPORT	A_ETAN
A_ETAN	ENTER   []
	SJS	R15,A_EABS		;Y=|X|
	EFC	R0,YMAX			;ARG TOO BIG?
	BLE	TAN1
	DSR	R0,R0			;THEN RETURN 0.0
	LR	R2,R1
	BR	TANX
TAN1	EQU	*
	DLR	R9,R3
	LR	R11,R5
	EFM	R3,TOPI
	SJS	R15,A_INTRND		;R0=N
	EFLT	R6,R0			;R6=XN
	EFIX	R3,R9
	EFLT	R3,R3			;X1
	EFSR	R9,R3			;X2
	DLR	R12,R6
	LR	R14,R8
	EFM	R12,C2			;XN*C2
	EFM	R6,C1			;XN*C1
	EFSR	R3,R6
	EFAR	R9,R3			;+X2
	EFSR	R9,R12			;-XN*C2 = f
	DLR	R3,R9
	LR	R5,R11
	LR	R14,R1			;SAVE N
	SJS	R15,A_EABS
	EFC	R0,EPS
	BGE	TAN2
	EFL	R0,ONE
	BR	TAN3
TAN2	EQU	*
	EFMR	R9,R9			;G=F**2
	EFL	R0,Q3			;Q(G)
	EFMR	R0,R9			;*G
	EFA	R0,Q2
	EFMR	R0,R9			;*G
	EFA	R0,Q1
	EFMR	R0,R9			;*G
	EFA	R0,HALF
	EFA	R0,HALF			;R0=Q(G)
	EFL	R6,P3			;P(G)
	EFMR	R6,R9
	EFA	R6,P2
	EFMR	R6,R9
	EFA	R6,P1
	EFMR	R6,R9			;*G
	EFMR	R6,R3
	EFAR	R3,R6			;R3=P(G)
TAN3	EQU	*
	TBR	15,R14			;N EVEN?
	BNZ	TANA
	XWR	R0,R3
	XWR	R1,R4
	XWR	R2,R5
	BR	TANB
TANA	EQU	*
	DLR	R6,R3
	LR	R8,R5
	DSR	R3,R3
	SR	R5,R5
	EFSR	R3,R6			;XNUM = -XNUM
TANB	EFDR	R0,R3
TANX	RETURN  A_ETAN

 ENDIF

	END

	MODULE	EARCTAN
	IMPORT	A_EABS

FALSE EQU  0
TRUE  EQU  1
BIF   EQU  FALSE

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

ONE	DATAE	1.0

 IF (BIF)

EBAMS	DATAE	683565275.5

 ELSE

HALF	DATAE	0.5
SQRT32	DATAE	0.267949192431
SQRT3	DATAE	1.732050807569
EPS	DATAE	1.34870E-6
A0	DATAE	0.0
A1	DATAE	0.523598775598
A2	DATAE	1.570796326795
A3	DATAE	1.047197551197
P0	DATAE	-0.427432672026E1
P1	DATAE	-0.427444985368E1
P2	DATAE	-0.794391295408E0
Q0	DATAE	0.128229801608E2
Q1	DATAE	0.205171376564E2
Q2	DATAE	0.919789364835E1

 ENDIF

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

 IF (BIF)

	EXPORT	A_EATAN
A_EATAN	ENTER   []
	DLR	R0,R3		; Y is in R0-R2
	LR	R2,R5
	EFL	R3,ONE		; X = 1.0
	IDATA	16#4F70#	; EATA R0 BIF
	EFLT	R0,R0		; Convert to float
	EFD	R0,EBAMS	; Convert to radians
	RETURN  A_EATAN

 ELSE

	EXPORT	A_EATAN
A_EATAN	ENTER   []
	LR	R13,R3			;save sign
	SJS	R15,A_EABS
	EFC	R0,ONE
	BGT	ATAN1
	SR	R14,R14			;N=0
	BR	ATAN2
ATAN1	LISP	R14,2			;N=0
	EFL	R3,ONE
	EFDR	R3,R0			;1/f
	DLR	R0,R3
	LR	R2,R5
ATAN2	EQU	*
	EFC	R0,SQRT32
	BLE	ATAN3
	AISP	R14,1			;N:=N+1
	DLR	R3,R0
	LR	R5,R2
	EFM	R0,SQRT3
	EFS	R0,HALF
	EFS	R0,HALF
	EFA	R3,SQRT3
	EFDR	R0,R3
ATAN3	EQU	*
	DLR	R3,R0
	LR	R5,R2
	SJS	R15,A_EABS		;|F|
	EFC	R0,EPS
	PSHM	R3,R5
	POPM	R0,R2			;RESTORE F
	BLT	ATAN4
	EFMR	R3,R3			;R3=G
	EFL	R6,P2
	EFMR	R6,R3
	EFA	R6,P1
	EFMR	R6,R3
	EFA	R6,P0
	EFMR	R6,R3
	EFL	R9,Q2
	EFAR	R9,R3
	EFMR	R9,R3
	EFA	R9,Q1
	EFMR	R9,R3
	EFA	R9,Q0
	EFDR	R6,R9
	EFMR	R6,R0
	EFAR	R0,R6
ATAN4	EQU	*
	CISP	R14,1
	BLE	ATAN5
	DSR	R3,R3
	LR	R5,R4
	EFSR	R3,R0
	DLR	R0,R3
	LR	R2,R5
ATAN5	EQU	*
	MISP	R14,3
	EFA	R0,A0,R14
	LR	R13,R13
	BGE	ATAN6
	DSR	R3,R3
	LR	R5,R4
	EFSR	R3,R0
	DLR	R0,R3
	LR	R2,R5
ATAN6	EQU	*
	RETURN  A_EATAN

 ENDIF
	END

	MODULE	ARCTAN
	IMPORT	A_EABS

FALSE EQU  0
TRUE  EQU  1
BIF   EQU  FALSE

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

ONE	DATAF	1.0

 IF (BIF)

BAMS	DATAF	10430.37835

 ELSE

HALF	DATAF	0.5
SQRT32	DATAF	0.267949192431
SQRT3	DATAF	1.732050807569
EPS	DATAF	3.45267E-4
A0	DATAF	0.0
A1	DATAF	0.523598775598
A2	DATAF	1.570796326795
A3	DATAF	1.047197551197
P0	DATAF	-0.4708325141E00
P1	DATAF	-0.5090958253E-1
Q0	DATAF	0.1412500740E1
Q1	DATAF	0.100E1

 ENDIF

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

 IF (BIF)

	EXPORT	A_ATAN
A_ATAN	ENTER   []
	DLR	R0,R3		; Y is in R0-R1
	DL	R2,ONE		; X = 1.0
	IDATA	16#4F60#	; ATA R0 BIF
	FLT	R0,R0		; Convert to float
	FD	R0,BAMS		; Convert to radians
	RETURN  A_ATAN

 ELSE

	EXPORT	A_ATAN
A_ATAN	ENTER   []
	LR	R13,R3			;save sign
	FABS	R0,R3
	FC	R0,ONE
	BGT	ATAN1
	SR	R14,R14			;N=0
	BR	ATAN2
ATAN1	LISP	R14,2			;N=2
	DL	R3,ONE
	FDR	R3,R0			;1/f
	DLR	R0,R3
ATAN2	EQU	*
	FC	R0,SQRT32
	BLE	ATAN3
	AISP	R14,1			;N:=N+1
	DLR	R3,R0
	FM	R0,SQRT3
	FS	R0,HALF
	FS	R0,HALF
	FA	R3,SQRT3
	FDR	R0,R3
ATAN3	EQU	*
        FABS    R3,R0
	FC	R3,EPS
	BLT	ATAN4
	DLR	R3,R0
	FMR	R3,R3			;R3=G
	DL	R6,P1			;COMPUTE R(G), COMPUTE G*P(G)
	FMR	R6,R3                      
	FA	R6,P0
	FMR	R6,R3
	DL	R9,Q1			;COMPUTE Q(G)
	FAR	R9,R3
	FMR	R9,R3
	FA	R9,Q0
	FDR	R6,R9			;G*P(G)/Q(G)
	FMR	R6,R0			;F*R(G)
	FAR	R0,R6			;+F
ATAN4	EQU	*
	CISP	R14,1
	BLE	ATAN5
	DSR	R3,R3
	FSR	R3,R0
	DLR	R0,R3
ATAN5	EQU	*
	SLL	R14,1
	FA	R0,A0,R14
	LR	R13,R13
	BGE	ATAN6
	DSR	R3,R3
	FSR	R3,R0
	DLR	R0,R3
ATAN6	EQU	*
	RETURN  A_ATAN

 ENDIF

	END

	MODULE	PWR
RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

        IMPORT	A_EPWR

	EXPORT	A_PWR
A_PWR	ENTER	[]
	SR	R8,R8
	DLR	R6,R5
	BGE	A_PWR1
	LISN	R8,1
A_PWR1	EQU	*
	SR	R5,R5
	LR	R3,R3
	BGE	A_PWR2
	LISN	R5,1
A_PWR2	EQU	*
	SJS	R15,A_EPWR
	RETURN	A_PWR
	END

	MODULE	EPWR
RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM
MAXEFLT	DATA	16#7FFF#,16#FF7F#,16#FFFF#
P1	DATAE	0.8333333333412136E-1
P2	DATAE	0.1249999796500608E-1
P3	DATAE	0.2233824352815418E-2
Q1	DATAE	0.693147180556341
Q2	DATAE	0.240226506144710
Q3	DATAE	0.555040488130765E-1
Q4	DATAE	0.961620659583789E-2
Q5	DATAE	0.130525515942810E-2
K	DATAE	0.4426950408889634
K0625	DATAE	0.0625
K16	DATAE	16.0
XZERO	DATA	0,0,0
IWMAX	DATA	0,2031
IWMIN	DATA	-1,-2031
A1	EQU	*
	DATAE	1.0				;0
	DATA	16#7A92#,16#BE00#,16#8A92#	;1
	DATA	16#7560#,16#6300#,16#73EE#	;2
	DATA	16#7066#,16#6F00#,16#7615#	;3
	DATA	16#6BA2#,16#7E00#,16#656B#	;4

	DATA	16#6712#,16#4600#,16#0A8F#	;5
	DATA	16#62B3#,16#9500#,16#08AA#	;6
	DATA	16#5E84#,16#5100#,16#CFAC#	;7
	DATA	16#5A82#,16#7900#,16#99FC#	;8
	DATA	16#56AC#,16#1F00#,16#7521#	;9

	DATA	16#52FF#,16#6B00#,16#54D8#	;10
	DATA	16#4F7A#,16#9900#,16#3048#	;11
	DATA	16#4C1B#,16#F800#,16#28C6#	;12
	DATA	16#48E1#,16#E900#,16#B9D5#	;13
	DATA	16#45CA#,16#E000#,16#F1F5#	;14

	DATA	16#42D5#,16#6100#,16#B3E6#	;15
	DATA	16#4000#,0,0			;16
;
A2	EQU	*
	DATA	0,0,0
	DATA	0,0,0
	DATA	0,0,0
	DATA	0,0,0
	DATA	0,0,0
	DATA	0,0,0
	DATA	0,0,0
	DATA	0,0,0

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

        IMPORT	A_EABS

        EXPORT	A_EPWR
A_EPWR	ENTER	[]
	EFC	R3,XZERO		; X > 0.0
	BGT	A_EP1			; YES
	BEZ	A_EP2			; X = 0.0
	SJS	R15,A_EABS
	JC	7,A_EPX
A_EP2	EQU	*
	EFC	R6,XZERO		;Y > 0.0
	BGE	A_EP21			;YES
	EFL	R0,MAXEFLT
	JC	7,A_EPX
A_EP21	EQU	*
	DLR	R0,R3
	LR	R2,R5
	JC	7,A_EPX
;3
A_EP1	EQU	*			;DETERMINE m
	LR	R12,R4
	SLL	R12,8
	SRA	R12,8			;R12 = m
;5
	DLR	R9,R3
	LR	R11,R5
	ANDM	R10,16#FF00#		;R9=g
;6
	SR	R13,R13			;p=0
	EFC	R9,A1+24		;find p
	BGT	A_EP11
	LIM	R13,24
A_EP11	EQU	*
	EFC	R9,A1+12,R13
	BGT	A_EP12
	AISP	R13,12
A_EP12	EQU	*
	EFC	R9,A1+6,R13
	BGT	A_EP13
	AISP	R13,6
A_EP13	EQU	*
;7
	DLR	R0,R9
	LR	R2,R11
	EFS	R0,A1+3,R13
	EFA	R9,A1+3,R13
	DISP	R13,3
	AISP	R13,1			;p
	PSHM	R12,R13			;SAVE m & p
	AISP	R13,1
	SRL	R13,1
	SISP	R13,1
	MISP	R13,3
	EFS	R0,A2,R13
	EFDR	R0,R9
	EFAR	R0,R0			;R0=Z
;8
	DLR	R9,R0
	LR	R11,R2
	EFMR	R9,R9			;V=Z**2
	EFL	R12,P3
	EFMR	R12,R9
	EFA	R12,P2
	EFMR	R12,R9
	EFA	R12,P1
	EFMR	R12,R9
	EFMR	R12,R0
	PSHM	R12,R14
	EFM	R12,K			;K*R
	EFA	R12,0,R15		;+R
	EFST	R0,0,R15		;SAVE Z
	EFM	R0,K			;K*Z
	EFAR	R12,R0			;+R
	EFA	R12,0,R15		;+Z; R12 = U2
	AISP	R15,3
;9
	L	R9,0,R15
	MISP	R9,16
	S	R9,1,R15
	DSRA	R9,16
	EFLT	R9,R9
	EFM	R9,K0625		;R9 = U1
	PSHM	R9,R14			;SAVE U1 & U2
	EFL	R9,K16			;REDUCE(Y)
	EFMR	R9,R6
	EFIX	R9,R9
	EFLT	R9,R9
	EFM	R9,K0625		;Y1
	DLR	R12,R6
	LR	R14,R8
	EFSR	R12,R9			;Y2
	EFM	R6,3,R15		;U2*Y
	EFM	R12,0,R15		;U1*Y2
	EFAR	R12,R6			;W
	EFL	R6,K16			;REDUCE(W)
	EFMR	R6,R12
	EFIX	R6,R6
	EFLT	R6,R6
	EFM	R6,K0625		;W1
	EFSR	R12,R6			;W2
	EFM	R9,0,R15		;Y1*U1
	EFAR	R9,R6			;NEW W
	AISP	R15,8
	EFL	R3,K16
	EFMR	R3,R9
	EFIX	R3,R3
	EFLT	R3,R3
	EFM	R3,K0625		;W1
	EFSR	R9,R3
	EFAR	R12,R9			;NEW W2
	EFL	R6,K16
	EFMR	R6,R12
	EFIX	R6,R6
	EFLT	R6,R6
	EFM	R6,K0625		;NEW W
	EFSR	R12,R6			;W2
	EFAR	R3,R6
	EFM	R3,K16
	EFIX	R3,R3			;IW1
;10
	DC	R3,IWMAX
	BGE	A_EP31
;11
	DC	R3,IWMIN
	BGT	A_EP30
	DSR	R0,R0
	SR	R2,R2
	BR	A_EPX
A_EP31	EQU	*
	EFL	R0,MAXEFLT
	BR	A_EPX
A_EP30	EQU	*
;13
	EFC	R12,XZERO
	BLE	A_EP32
	AISP	R4,1
	EFS	R12,K0625
A_EP32	EQU	*
	SR	R3,R3
	LR	R4,R4
	BLT	A_EP33
	LISP	R3,1
A_EP33	EQU	*
	LR	R0,R4
	DISP	R4,16
	AR	R4,R3			;M'
	LR	R1,R4
	MISP	R1,16
	SR	R1,R0			;P'
;14
	EFL	R9,Q5
	EFMR	R9,R12
	EFA	R9,Q4
	EFMR	R9,R12
	EFA	R9,Q3
	EFMR	R9,R12
	EFA	R9,Q2
	EFMR	R9,R12
	EFA	R9,Q1
	EFMR	R9,R12			;Z
;15
	LR	R5,R1
	MISP	R5,3
	EFL	R0,A1,R5
	EFMR	R0,R9
	EFA	R0,A1,R5		;Z
	LR	R3,R1
	SLL	R3,8
	SRA	R3,8
	AR	R3,R4
	ANDM	R3,16#FF#
	ANDM	R1,16#FF00#
	ORR	R1,R3			;RESULT
A_EPX	EQU	*
	RETURN	A_EPWR
	END

        MODULE	EABS

;	FUNCTION ABS(X:LONG_FLOAT) RETURN LONG_FLOAT ;

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

; NOTE: This function does not destroy any register, routines calling this
;       function need not save registers

 	EXPORT	A_EABS
A_EABS	ENTER   []			;ABSOLUTE VALUE OF EFLT
	DSR	R0,R0
	SR	R2,R2
	LR	R3,R3
	BLT	ABS2
	EFAR	R0,R3
	BR      ABSX
ABS2	EFSR	R0,R3
ABSX	RETURN  A_EABS
	END

	MODULE	INTRND

;	FUNCTION INTRND(X:LONG_FLOAT) RETURN LONG_INTEGER ;
;
;	FUNCTION AINTRND(X:LONG_FLOAT) RETURN LONG_FLOAT ;

RTXCONS	CSECT	OPERAND,READ_ONLY,RAM_ROM

HALF	DATAE	0.5

RTXCODE	CSECT	INSTRUCTION,READ_ONLY,ROM

; NOTE: This function does not destroy any register, routines calling this
;       function need not save registers

        EXPORT	A_INTRND
A_INTRND ENTER  []			;ROUND FLOATING PT. TO NEAREST INTEGER
	LR	R2,R5
	DLR	R0,R3
	BLT	INTRND1			;NEGATIVE
	EFA	R0,HALF
	BR	INTRNDX
INTRND1	EFS	R0,HALF
INTRNDX	EFIX	R0,R0
	RETURN  A_INTRND

	EXPORT	A_AINTRND
A_AINTRND ENTER []
	SJS	R15,A_INTRND
	EFLT	R0,R0
	RETURN  A_AINTRND
	END
